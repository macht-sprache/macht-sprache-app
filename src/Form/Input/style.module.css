.container {
    position: relative;
    display: flex;
    flex-direction: column;
    background: white;
    cursor: text;
}

.containerError {
    composes: container;
    box-shadow: 0 0 0 var(--thickBorder) var(--red);
}

.containerDisabled {
    composes: container;
    color: var(--disabledGrey);
}

.containerBusy {
    composes: container;
    --w: calc(var(--thickBorder) * 1);
    --l: 2rem;
}

.containerBusy:before {
    content: '';
    position: absolute;
    top: calc(var(--thickBorder) * -1);
    right: calc(var(--thickBorder) * -1);
    bottom: calc(var(--thickBorder) * -1);
    left: calc(var(--thickBorder) * -1);
    background: linear-gradient(90deg, var(--green) 50%, transparent 50%),
        linear-gradient(90deg, var(--green) 50%, transparent 50%),
        linear-gradient(0deg, var(--green) 50%, transparent 50%),
        linear-gradient(0deg, var(--green) 50%, transparent 50%);
    background-repeat: repeat-x, repeat-x, repeat-y, repeat-y;
    background-size: var(--l) var(--w), var(--l) var(--w), var(--w) var(--l), var(--w) var(--l);
    animation: border-dance 0.3s infinite linear;
}

@keyframes border-dance {
    0% {
        background-position: 0 0, var(--l) 100%, 0 var(--l), 100% 0;
    }
    100% {
        background-position: var(--l) 0, 0 100%, 0 0, 100% var(--l);
    }
}

.container:focus-within {
    box-shadow: 0 0 0 var(--thickBorder) var(--orange);
}

.input {
    width: 100%;
    font-family: inherit;
    font-weight: bold;
    border: none;
    background: transparent;
    font-size: inherit;
    padding: 2rem 0.5rem 0.5rem;
    color: inherit;
    opacity: 1;
}

.input:focus {
    outline: none;
}

.label,
.labelEmpty {
    position: absolute;
    left: 0.5rem;
    top: 0.7rem;
    transition: all 0.2s;
    pointer-events: none;
    transform: translateY(0);
}

.error {
    background: var(--red);
    font-size: var(--fontSizeS);
    color: var(--white);
    padding: 0.5rem;
}

.warning {
    composes: error;
    background: var(--orange);
}

.container:not(:focus-within) .labelEmpty {
    transform: translateY(0.7rem);
}

.ariaLabel {
    position: absolute;
    height: 1px;
    width: 1px;
    overflow: hidden;
    clip: rect(1px, 1px, 1px, 1px);
}

.select {
    composes: input;
    -webkit-appearance: none;
    cursor: pointer;
    background-image: url('./select_arrow.svg');
    background-repeat: no-repeat;
    background-size: 1rem;
    background-position: center right 1rem;
    background-color: transparent;
}

.select:focus {
    outline: none;
}

.textarea {
    composes: input;
    background: transparent;
    font-size: inherit;
    resize: vertical;
    min-height: 100px;
}

.textarea:focus {
    outline: none;
}
