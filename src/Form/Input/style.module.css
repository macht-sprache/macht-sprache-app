.container {
    position: relative;
    display: flex;
    flex-direction: column;
    background: white;
    cursor: text;
}

.containerError {
    composes: container;
    box-shadow: 0 0 0 var(--thickBorder) var(--red);
}

/* .container:hover, */
.container:focus-within {
    box-shadow: 0 0 0 var(--thickBorder) var(--orange);
}

.input {
    width: 100%;
    font-family: inherit;
    font-weight: bold;
    border: none;
    background: transparent;
    font-size: inherit;
    padding: 2rem 0.5rem 0.5rem;
}

.input:focus {
    outline: none;
}

.label,
.labelEmpty {
    position: absolute;
    left: 0.5rem;
    top: 0.7rem;
    transition: all 0.2s;
    pointer-events: none;
    transform: translateY(0);
}

.error {
    background: var(--red);
    font-size: var(--fontSizeS);
    color: var(--white);
    padding: 0.5rem;
    /* margin-top: 1rem; */
}

.container:not(:focus-within) .labelEmpty {
    transform: translateY(0.7rem);
}

.ariaLabel {
    position: absolute;
    height: 1px;
    width: 1px;
    overflow: hidden;
    clip: rect(1px, 1px, 1px, 1px);
}

.select {
    composes: input;
    -webkit-appearance: none;
    cursor: pointer;
    background-image: url('./select_arrow.svg');
    background-repeat: no-repeat;
    background-size: 1rem;
    background-position: center right 1rem;
    background-color: transparent;
}

.selectLabel {
    composes: label;
}

.selectLabelEmpty {
    composes: selectLabel;
    transform: translateY(0.6rem);
}

.select:focus {
    outline: none;
}

.selectContainer {
    composes: container;
    justify-content: flex-start;
    min-height: calc(4rem - var(--thickBorder) * 2);
}

.selectContainerWithError {
    composes: selectContainer;
    box-shadow: 0 0 0 var(--thickBorder) var(--red);
}

.textarea {
    composes: input;
    background: transparent;
    font-size: inherit;
    resize: vertical;
    min-height: 100px;
}

.textarea:focus {
    outline: none;
}

.textareaLabel {
    composes: label;
}

.textareaLabelEmpty {
    composes: textareaLabel;
}

.textareaContainer:not(:focus-within) .textareaLabelEmpty {
    transform: translateY(1rem);
}

.textareaContainer {
    composes: container;
}

.textareaContainerWithError {
    composes: textareaContainer;
    box-shadow: 0 0 0 var(--thickBorder) var(--red);
}
