name: app
on: [push]
jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
            - uses: actions/setup-node@v2
              with:
                  node-version: '16'
            - name: Cache node modules
              uses: actions/cache@v2
              env:
                  cache-name: app-npm
              with:
                  path: ~/.npm
                  key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-${{ env.cache-name }}-
            - name: Install dependencies
              run: npm ci
            - name: Build app
              run: npm run build
              env:
                  REACT_APP_FIREBASE_PROJECT: ${{ secrets.FIREBASE_PROJECT }}
                  REACT_APP_FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
                  REACT_APP_FIREBASE_SENDER_ID: ${{ secrets.FIREBASE_SENDER_ID }}
                  REACT_APP_FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
                  REACT_APP_FIREBASE_REGION: ${{ secrets.FIREBASE_REGION }}
                  PUBLIC_URL: https://storage.googleapis.com/${{ secrets.STATIC_FILE_BUCKET }}/
            - uses: actions/upload-artifact@v2
              with:
                  name: app-build
                  path: build
    deploy:
        runs-on: ubuntu-latest
        needs: build
        steps:
            - uses: actions/checkout@v2
            - uses: actions/download-artifact@v2
              with:
                  name: app-build
                  path: build
            - name: Deploy static files
              uses: actions-hub/gcloud@master
              env:
                  PROJECT_ID: ${{ secrets.FIREBASE_PROJECT }}
                  APPLICATION_CREDENTIALS: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
                  STATIC_FILE_BUCKET: ${{ secrets.STATIC_FILE_BUCKET }}
              with:
                  args: -h 'Cache-Control:public, max-age=31536000' -m cp -n -r -z js,svg,css ./build/static/* 'gs://'"$STATIC_FILE_BUCKET"'/static'
                  cli: gsutil
            - name: Get Deploy Channel ID
              run: echo ::set-output name=short::${GITHUB_REF#refs/*/}
              id: ref
            - name: Deploy to Firebase Hosting
              uses: FirebaseExtended/action-hosting-deploy@v0
              id: deploy
              with:
                  repoToken: '${{ secrets.GITHUB_TOKEN }}'
                  firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT }}'
                  channelId: ${{ steps.ref.outputs.short }}
            - name: Notify Slack
              env:
                  DETAILS_URL: '${{ steps.deploy.outputs.details_url }}'
                  WEBHOOK_URL: '${{ secrets.SLACK_DEPLOY_WEBHOOK_URL }}'
              run: |
                  curl -X POST -H 'Content-type: application/json' --data '{"text":"Deployed to '"$DETAILS_URL"'"}' "$WEBHOOK_URL"
